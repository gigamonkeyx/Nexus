apiVersion: v1
kind: ConfigMap
metadata:
  name: nexus-config
data:
  nexus.json: |
    {
      "hub": {
        "host": "0.0.0.0",
        "port": 8000,
        "registry_file": "/app/data/registry.json"
      },
      "servers": {
        "auto_start": true,
        "auto_restart": true
      },
      "security": {
        "users_file": "/app/data/users.json",
        "tokens_file": "/app/data/tokens.json",
        "roles_file": "/app/data/roles.json",
        "cors_origins": ["*"],
        "basic_auth": {
          "enabled": true
        },
        "token_auth": {
          "enabled": true
        }
      },
      "ui": {
        "host": "0.0.0.0",
        "port": 8080,
        "static_dir": "src/nexus/ui/static"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus-mcp-hub
  labels:
    app: nexus-mcp-hub
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nexus-mcp-hub
  template:
    metadata:
      labels:
        app: nexus-mcp-hub
    spec:
      containers:
      - name: nexus-mcp-hub
        image: nexus-mcp-hub:latest
        imagePullPolicy: IfNotPresent
        args: ["--config", "/app/config/nexus.json", "--log-level", "INFO"]
        ports:
        - containerPort: 8000
          name: api
        - containerPort: 8080
          name: ui
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: data-volume
          mountPath: /app/data
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /api/hub/status
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/hub/status
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config-volume
        configMap:
          name: nexus-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: nexus-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nexus-mcp-hub
spec:
  selector:
    app: nexus-mcp-hub
  ports:
  - name: api
    port: 8000
    targetPort: 8000
  - name: ui
    port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nexus-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nexus-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: nexus.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: nexus-mcp-hub
            port:
              number: 8000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nexus-mcp-hub
            port:
              number: 8080
